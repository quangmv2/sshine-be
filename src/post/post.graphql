type Query {
    post(id_post: String): Post,
    posts(page: Int, limit: Int): PostPaginate
    myPosts(offset: Int, limits: Int): [Post]
}

type Mutation {
    addPost(input: PostInput!): Post
    deletePost(id_post: String): Post
}

type Subscription {
    listenNewPost: Post
}

input PostInput{
    id: String,
    title: String,
    content: String,
    image: String
}

type Post {
    id: String,
    title: String,
    content: String,
    image: String,
    comments: [Comment],
    likes: [Like],
    user: User
    createdAt: Float,
    updatedAt: Float
}

type PostPaginate {
    data: [Post],
    itemCount: Int,
    limit: Int,
    page: Int
}

type Comment {
    id: String,
    user: User,
    content: String,
    total: Int,
    created_at: Float,
    updated_at: Float
}

type Like {
    id: String,
    user: User,
    total: Int,
    created_at: Float,
    updated_at: Float
}